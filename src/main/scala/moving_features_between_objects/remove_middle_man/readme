Remove Middle Man(移除中间人)
某个类做了过多的简单委托动作
让客户直接调用受托类

动机
在Hide Delegate的"动机"中，谈到了"封装受托对象"的好处。
但是这层封装也是有代价的。它的代价就是：
每个客户要使用受托类的新特性时，你必须在服务端添加一个简单委托函数。
随着受托类的特性(功能)越来越多，这一过程会让你痛苦不已。服务类完全变成了
一个“中间人”。此时，你就应该让客户直接调用受托类。

做法
1、建立一个函数，用于获得受托对象。
2、对于每个委托函数，在服务类中删除该函数，
3、处理每个委托函数后编译、测试

