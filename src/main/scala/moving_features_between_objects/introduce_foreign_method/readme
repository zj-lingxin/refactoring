Indroduce Foreign Method(引入外加函数)
你需要为提供服务的类增加一个函数，但你无法修改这个类。
在客户类中建立一个函数，并以第一参数形式传入一个服务类实例

动机
这种事情发生太多次了：你正在使用一个类，它真的很好，为你提供了需要的所有服务。
而后，你有需要一项新服务，这个类却无法供应。于是你开始咒骂：“为什么不能做这件事?”
如果可以修改源码，你便可以自行添加一个新函数；如果不能，你就在客户端编码，补足你要的
那个函数。
如果客户类只使用这项功能一次，那么额外编码工作没什么大不了，甚至可能根本不需要原本提供服务的那个类。
然而，如果你需要多次使用这个函数，就得不断重复这些代码。还记得吗，重复代码是软件万恶之源。这些重复
代码应该被抽出来放进同一个函数中。进行本项重构时，如果你以外加函数实现这项功能，那就是一个明确的信号：
这个函数应该原本在提供服务的类中实现。
如果你发现自己为一个服务类建立了大量外加函数，或者发现有许多类都需要同样的外加函数，就不需要再使用本项
重构，而应该使用Introduce Local Extension。
但是不要忘记：外加函数终归是个权宜之计。如果有可能，你仍然应该将这些函数搬移到它们的理想家园。如果由于
代码所有权的原因是你无法做这样的搬移，就把外加函数交给服务类的拥有者，请他帮你在服务类中实现整个函数。

注意：在Scala中可以使用隐式转换来扩展类的功能。